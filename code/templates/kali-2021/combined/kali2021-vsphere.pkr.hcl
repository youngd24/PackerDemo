
variable "insecure_connection" {
  type    = string
  default = "true"
}

variable "password" {
  type    = string
  default = "test"
}

variable "username" {
  type    = string
  default = "test"
}

variable "vcenter_pass" {
  type    = string
  default = "test"
}

variable "vcenter_server" {
  type    = string
  default = "test"
}

variable "vcenter_user" {
  type    = string
  default = "test"
}

source "vsphere-iso" "autogenerated_1" {
  CPUs                 = 2
  RAM                  = 2048
  RAM_reserve_all      = true
  boot_command         = ["<enter><wait><f6><wait><esc><wait>", "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>", "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>", "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>", "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>", "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>", "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>", "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>", "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>", "<bs><bs><bs>", "/install/vmlinuz", " initrd=/install/initrd.gz", " priority=critical", " locale=en_US", " file=/media/preseed.cfg", "<enter>"]
  cluster              = "test"
  datacenter           = "test"
  datastore            = "test"
  disk_controller_type = ["pvscsi"]
  floppy_files         = ["./preseed.cfg"]
  guest_os_type        = "ubuntu64Guest"
  insecure_connection  = "true"
  iso_checksum         = "sha256:e2ecdace33c939527cbc9e8d23576381c493b071107207d2040af72595f8990b"
  iso_urls             = ["http://cdimage.ubuntu.com/releases/18.04/release/ubuntu-18.04.4-server-amd64.iso"]
  network_adapters {
    network      = ""
    network_card = "vmxnet3"
  }
  notes        = "kali2020.1 Packer build"
  password     = "test"
  ssh_password = "test"
  ssh_username = "test"
  storage {
    disk_size             = 90000
    disk_thin_provisioned = true
  }
  username       = "test"
  vcenter_server = "test"
  vm_name        = "secops-packer-kali2020.1-base"
}

build {
  sources = ["source.vsphere-iso.autogenerated_1"]

  provisioner "shell" {
    inline = ["sudo su ", "cd /etc/netplan ", "sudo rm -rf *.yaml", "sudo netplan apply", "echo 'template build complete'"]
  }

}
